class(t)
dim(t)
View(t)
head(t)
tt <- t(t)
head(t)
View(t)
head(tt)
view(tt)
grouping
View(t)
i<-1
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition$condition
df[1,]
matrix_condition
matrix_condition$grouping
levels(grouping)
level(grouping)
levels(grouping)
Levels(grouping)
grouping
levels(as.factor(grouping))
matrix_condition$grouping
grouping <- paste(meta$CT, meta$gene_type, sep ="_")
grouping
grouping <- paste(meta$gene_type, meta$CT, sep ="_")
grouping
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition$condition
matrix_condition
matrix_condition
matrix_condition$condition
t <- sapply(as.matrix(df), 1, function(x){
single_row_df <- data.frame("ratio" = x, grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition$condition
})
t <- sapply(1: nrow(df), function(x){
single_row_df <- data.frame("ratio" = as.vector(t(df[x,])), grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition$condition
})
t
class(t)
tt < t(t)
tt <- t(t)
head(tt)
i<-1
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition$condition
i<-2
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition$condition
matrix_condition
single_row_df
single_row_df
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_df
single_row_df
head(df)
View(df)
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_df
nrow(df)
as.vector(t(df[i,]))
df[i,]
df[1,]
df[i,]
i
df[2,]
df[,1]
df[1,]
class(df)
dim(df)
df[1,]
df[i,]
i
df[2,]
df[3,]
df[4,]
df[2,]
i<-1
df[i,]
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_df
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition
t <- sapply(1: nrow(df), function(x){
single_row_df <- data.frame("ratio" = as.vector(t(df[x,])), grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition$condition
},simplify = TRUE)
tt <- t(t)
tt
nlevels(grouping)
nlevel(grouping)
grouping
length(unique(grouping))
dim(df)
head(Df)
head(df)
colnames(df)
t <- sapply(1: nrow(df), function(x){
single_row_df <- data.frame("ratio" = as.vector(t(df[x,])), grouping)
#matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = n())
matrix_condition$condition
},simplify = TRUE)
tt <- t(t)
head(tt)
i
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
matrix_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
matrix_number <- single_row_df %>% group_by(grouping) %>% summarise( condition = n())
matrix_number
?matrix
nlevle(as.factor(grouping))
nlevel(as.factor(grouping))
?level
?levels\\
?levels
grouping_factor <- nlevels(as.factor(grouping))
grouping_factor
matrix_condition <- matrix(data =  NA, nrow =1, ncol =  nlevels(as.factor(grouping)))
matrix_condition
matrix_condition
colnames(matrix_condition) <- levels(as.factor(grouping))
matrix_condition
i
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
single_row_number <- single_row_df %>% group_by(grouping) %>% summarise( condition = n())
matrix_condition
single_row_df[i,]
matrix_condition[i,]
matrix_condition[i,] <- single_row_condition$condition
matrix_condition
matrix_condition[i,] <- single_row_condition$condition
matrix_number[i,] <- single_row_number$number
matrix_number
matrix_number
single_row_number
single_row_number$number
single_row_number <- single_row_df %>% group_by(grouping) %>% summarise( number = n())
single_row_number$number
matrix_number[i,] <- single_row_number$number
matrix_number[,2]
matrix_number[2,]
matrix_number[3,]
matrix_number
matrix_number
matrix_condition <- matrix(data =  NA, nrow =1, ncol =  nlevels(as.factor(grouping)))
colnames(matrix_condition) <- levels(as.factor(grouping))
matrix_number <- matrix_condition
matrix_number
single_row_number
single_row_condition
single_row_condition$condition
single_row_number$number
matrix_condition[i,]
matrix_number[i,]
matrix_condition[i,] <- single_row_condition$condition
matrix_number[i,] <- single_row_number$number
matrix_condition
matrix_number
matrix_number[2,]
matrix_number[3,]
?data.frame
matrix_condition <- as.data.frame(matrix(data =  NA, nrow =1, ncol =  nlevels(as.factor(grouping))))
colnames(matrix_condition) <- levels(as.factor(grouping))
matrix_number <- matrix_condition
matrix_condition
class(matrix_condition)
matrix_condition[2,]
matrix_condition[4,]
for(i in 1: nrow(df)){
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
single_row_number <- single_row_df %>% group_by(grouping) %>% summarise( number = n())
matrix_condition[i,] <- single_row_condition$condition
matrix_number[i,] <- single_row_number$number
}
head(matrix_condition)
head(matrix_number)
i>2
i<-2
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
single_row_number <- single_row_df %>% group_by(grouping) %>% summarise( number = n())
single_row_condition$condition
single_row_number$number
single_row_df
single_row_df
single_row_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
single_row_condition
single_row_condition
single_row_df
single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
i<-3
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_df
single_row_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
single_row_condition
single_row_number <- single_row_df %>% group_by(grouping) %>% summarise( number = n())
single_row_number
df
view(df)
df[1,]
is.na(df[1,])
is.na(df[2,])
single_row_df %>% group_by(grouping) %>% summarise( condition = (n() >2))
single_row_df %>% group_by(grouping) %>% summarise( condition = is.na()
)
single_row_df %>% group_by(grouping) %>% summarise( condition = is.na())
?summarise
table(grouping)
single_row_df
i
i<-3
i<-1
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_df
single_row_df <-  as.vector(t(df[i,]))
single_row <-  as.vector(t(df[i,]))
single_row
is.na(single_row)
single_row <-  is.na(as.vector(t(df[i,])))
single_row_df <- data.frame("ratio" = single_row, grouping)
single_row_df
single_row_df
single_row_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition = sum())
single_row_condition
table(single_row_condition)
single_row_condition <- single_row_df %>% group_by(grouping) %>% summarise( condition =sum(is.na(y)))
single_row_df %>% group_by(grouping) %>% summarise( condition =sum(is.na(x)))
single_row_df %>% group_by(grouping) %>% summarise( condition =sum(is.na()))
single_row_df %>% group_by(grouping) %>% summarise( condition =sum(ratio))
single_row_df %>% group_by(grouping) %>% summarise( condition =sum(ratio))
single_row_df
single_row_df$ratio
sum(single_row_df$ratio)
single_row_df
single_row_df <- data.frame("ratio" = as.vector(t(df[i,])), grouping)
single_row_df
single_row_df %>% group_by(grouping) %>% summarise( condition =sum(is.na(ratio)))
single_row_df %>% group_by(grouping) %>% summarise( condition =sum(is.na(ratio)))
single_row_df %>% group_by(grouping) %>% summarise(condition =sum(!is.na(value)))
single_row_df <- data.frame("value" = as.vector(t(df[i,])), grouping)
single_row_df %>% group_by(grouping) %>% summarise(condition =sum(!is.na(value)))
single_row_df <- data.frame("value" = as.vector(t(df[i,])), grouping)
single_row_df %>% group_by(grouping) %>% summarise(number_not_NA =sum(!is.na(value)),number_in_group =n())
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_not_NA =sum(!is.na(value)),number_in_group =n())
View(single_row_df_test)
View(single_row_df_test)
single_row_df_test
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_in_group =n(),number_not_NA =sum(!is.na(value)))
single_row_df_test
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_in_group =n(),number_not_NA =sum(!is.na(value)), test = sum(!is.na(value)) > (0.5*n()))
single_row_df_test
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (0.5*n()),
if_more_than_one_eachgroup = sum(!is.na(value)) > 1
)
single_row_df_test
single_row_df <- data.frame("value" = as.vector(t(df[i,])), grouping)
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (0.5*n()),
if_more_than_one_eachgroup = sum(!is.na(value)) >= 1
)
single_row_df_test
single_row_df_test
single_row_df_test$if_more_than_one_eachgroup
all(single_row_df_test$if_more_than_one_eachgroup)
sum(single_row_df_test$if_more_than_percentage_eachgroup)
nrow(single_row_df_test)
Q_subgroup = 0.5
Q_global = 0.8
single_row_df <- data.frame("value" = as.vector(t(df[i,])), grouping)
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (Q_subgroup*n())
)
single_row_df_test
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) >= (Q_subgroup*n())
single_row_df_test
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) >= (Q_subgroup*n())
)
single_row_df_test
grouping
table(grouping)
max(table(grouping)
)
max(table(grouping))
print(paste0("Q_subgroup cannot be greater than",  max(table(grouping), "set it to", max(table(grouping), "automatically")
)
)
print(paste0("Q_subgroup cannot be greater than",  max(table(grouping), "set it to", max(table(grouping), "automatically"))
print(paste0("Q_subgroup cannot be greater than",  max(table(grouping)), "set it to", max(table(grouping),) "automatically"))
max(table(grouping))
print(paste0("Q_subgroup cannot be greater than",  max(table(grouping)), " set it to", max(table(grouping)),"automatically"))
print(paste0("Q_subgroup cannot be greater than ",  max(table(grouping)), ", set it to ", max(table(grouping))," automatically!"))
threshold  = 1
N_subgroup  = 1
N_subgroup
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) >= (Q_subgroup*n()),
if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup)
)
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) >= (Q_subgroup*n()),
if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
Q_subgroup
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (Q_subgroup*n()),
if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
min(table(grouping))
print(paste0("Q_subgroup cannot be greater than ",  min(table(grouping)), ", set it to ", min(table(grouping))," automatically!"))
min(table(grouping))
Q_subgroup = 0.5
Q_global = 0.8
if(Q_subgroup < 0){
N_subgroup <- 1
print("Q_subgroup cannot be smaller the 0, set it to 1 automatically")
# will use N_subgroup instead
}else if(Q_subgroup > min(table(grouping))){
N_subgroup <- min(table(grouping))
print(paste0("Q_subgroup cannot be greater than ",  min(table(grouping)), "which is the minimu element number across all groups, set it to ", min(table(grouping))," automatically!"))
# will use N_subgroup instead
}else if( Q_subgroup >1 && Q_subgroup < min(table(grouping)))(
# if in the range of (1, min(group size))
N_subgroup <- Q_subgroup
)else{
# the last case is in the range of (0,1), do nothing
N_subgroup <- 1
}
N_subgroup
Q_subgroup
Q_subgroup = 10
Q_global = 0.8
if(Q_subgroup < 0){
N_subgroup <- 1
print("Q_subgroup cannot be smaller the 0, set it to 1 automatically")
# will use N_subgroup instead
}else if(Q_subgroup > min(table(grouping))){
N_subgroup <- min(table(grouping))
print(paste0("Q_subgroup cannot be greater than ",  min(table(grouping)), "which is the minimu element number across all groups, set it to ", min(table(grouping))," automatically!"))
# will use N_subgroup instead
}else if( Q_subgroup >1 && Q_subgroup < min(table(grouping)))(
# if in the range of (1, min(group size))
N_subgroup <- Q_subgroup
)else{
# the last case is in the range of (0,1), do nothing
N_subgroup <- 1
}
N_subgroup
Q_subgroup
Q_subgroup = 0.5
Q_global = 0.8
if(Q_subgroup < 0){
N_subgroup <- 1
print("Q_subgroup cannot be smaller the 0, set it to 1 automatically")
# will use N_subgroup instead
}else if(Q_subgroup > min(table(grouping))){
N_subgroup <- min(table(grouping))
print(paste0("Q_subgroup cannot be greater than ",  min(table(grouping)), "which is the minimu element number across all groups, set it to ", min(table(grouping))," automatically!"))
# will use N_subgroup instead
}else if( Q_subgroup >1 && Q_subgroup < min(table(grouping)))(
# if in the range of (1, min(group size))
N_subgroup <- Q_subgroup
)else{
# the last case is in the range of (0,1), do nothing
N_subgroup <- 1
}
N_subgroup
single_row_df <- data.frame("value" = as.vector(t(df[i,])), grouping)
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (Q_subgroup*n()),
if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
index_qualified <- NULL
index_qualified <- c(index_qualified,1)
index_qualified
index_qualified <- c(index_qualified,)
index_qualified <- c(index_qualified,2)
index_qualified
matrix_missingvalue_filtering <- function(data.matrix, Q_sample = 0.8, grouping = NULL, Q_group =  0.5, Q_inner_group = NULL){ #  Q value can only be from 0~1
data.matrix <- as.matrix(data.matrix) # works best on datamatrix, incase not a datamatrix provided
data.matrix[is.infinite(data.matrix)] <- NaN  # in case there are infinte values there
data.matrix[is.na(data.matrix)] <- NaN # remove
if(Q_sample < 0|Q_sample > 1 ){
print ("Q value can only be from 0~1, the percentage of presence, Invalid Q imput! No filtering applied")
return(data.matrix)
}else{
if(is.null(grouping)){ # if no grouping info provided, filter the data as a whole
threshold <- ceiling(ncol(data.matrix)*Q_sample)
data.matrix_filtered <- data.matrix[which(apply(data.matrix,1,function(x)(sum(is.na(x))) <= (ncol(data.matrix)-threshold))),]
return(data.matrix_filtered)
}else{ # if grouping info provided, the Q_sample vill be overided  do groupwise filtering
}
}
}
grouping
t <- matrix_missingvalue_filtering(data.matrix, Q_sample = 0.8)
dim(t)
dim(data.matrix)
dijm(df)
dim(df)
t <- matrix_missingvalue_filtering(data.matrix = df, Q_sample = 0.8)
dim(t)
index_qualified <- NULL
i
single_row_df <- data.frame("value" = as.vector(t(data.matrix[i,])), grouping)# grouping has to be the same order with the columns
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (Q_subgroup*n()),
if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
single_row_df_test
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_presence_eachgroup =sum(!is.na(value)),
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (Q_subgroup*n())
#,
#if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
single_row_df <- data.frame("value" = as.vector(t(data.matrix[i,])), grouping)# grouping has to be the same order with the columns
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_valid_eachgroup =sum(!is.na(value)),
Q_valid_eachgroup = sum(!is.na(value))/n()，
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (Q_inner_group*n())
#,
#if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
Q_intra_group <- 0.23
single_row_df <- data.frame("value" = as.vector(t(data.matrix[i,])), grouping)# grouping has to be the same order with the columns
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_valid_eachgroup =sum(!is.na(value)),
Q_valid_eachgroup = sum(!is.na(value))/n()，
if_more_than_percentage_eachgroup = sum(!is.na(value)) > (Q_intra_group*n())
#,
#if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_valid_ingroup =sum(!is.na(value)),
Q_valid_ingroup = sum(!is.na(value))/n()，
Decision_Q_ingroup = sum(!is.na(value)) > (Q_intra_group*n())
#,
#if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
i<-2
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_valid_ingroup =sum(!is.na(value)),
Q_valid_ingroup = sum(!is.na(value))/n()，
Decision_Q_ingroup = sum(!is.na(value)) > (Q_intra_group*n())
#,
#if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
single_row_df <- data.frame("value" = as.vector(t(data.matrix[i,])), grouping)# grouping has to be the same order with the columns
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_valid_ingroup =sum(!is.na(value)),
Q_valid_ingroup = sum(!is.na(value))/n()，
Decision_Q_ingroup = sum(!is.na(value)) > (Q_intra_group*n())
#,
#if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
i<-3
single_row_df <- data.frame("value" = as.vector(t(data.matrix[i,])), grouping)# grouping has to be the same order with the columns
single_row_df_test <- single_row_df %>% group_by(grouping) %>% summarise(number_earchgroup =n(),
number_valid_ingroup =sum(!is.na(value)),
Q_valid_ingroup = sum(!is.na(value))/n()，
Decision_Q_ingroup = sum(!is.na(value)) > (Q_intra_group*n())
#,
#if_more_than_N_eachgroup = sum(!is.na(value)) >= N_subgroup
)
single_row_df_test
single_row_df_test$Decision_Q_ingroup
sum(single_row_df_test$Decision_Q_ingroup)
n_groups <- length(grouping)
n_groups
n_groups <- length(unique(grouping))
n_groups
sum(single_row_df_test$Decision_Q_ingroup) > n_groups
Q_group
Q_group =  0.5
sum(single_row_df_test$Decision_Q_ingroup) > n_groups*Q_group
single_row_df_test$Decision_Q_ingroup
single_row_df_test$number_valid_ingroup
