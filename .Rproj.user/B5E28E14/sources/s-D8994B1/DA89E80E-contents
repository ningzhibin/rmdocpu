library(reshape2)
library(ggplot2)
library(plotly)

# Read the function.csv tabel generated by iMetaLab
data_fun <- read.csv("function.csv", header = TRUE, sep = ",")

data_fun[1:8,1:8]


#Keep only Protein_ID == 1
data_fun <- data_fun[data_fun$Protein_ID == 1,]
 
# Summary of data -----------------------------
# Number of protein groups in total
  nrow(data_fun)
  
# Number of protein groups that have COG annotation
  nrow(data_fun[data_fun$COG.accession != "",])
# Number of unique COG accessions annotated
  length(unique(data_fun$COG.accession))-1

# Number of protein groups that have NOG annotation
  nrow(data_fun[data_fun$NOG.accession != "",])
# Number of unique NOG accessions annotated
  length(unique(data_fun$NOG.accession))-1

# Number of protein groups that have KEGG annotation
  nrow(data_fun[data_fun$KEGG.name != "",])
# Number of unique KEGG accessions annotated
  length(unique(data_fun$KEGG.name))-1

# Number of protein groups that have GO annotation
  nrow(data_fun[data_fun$GOBP.accession != "",])
  nrow(data_fun[data_fun$GOCC.accession != "",])
  nrow(data_fun[data_fun$GOMF.accession != "",])

# Summary of data ends -----------------------------
  
# COG summary --------------------------------------
 
 
  # Get the columns out of the table
  if(any(grepl("intensity.", colnames(data_fun), ignore.case=TRUE))){ # if there are LFQ intensity columns, take out the LFQ columns
    intensity_columns <- data_fun[,grep("intensity.", colnames(data_fun), ignore.case=TRUE)]
    colnames(intensity_columns)<-gsub("intensity.", "", colnames(intensity_columns), ignore.case=TRUE)
  }
  
  #cbind
  
  intensity_columns_C <- cbind(data_fun$COG.category, intensity_columns)
  data_fun_COG <- aggregate(. ~ data_fun$COG.category, data = intensity_columns_C[,-1], FUN = sum)
  
  data_fun_COG$`data_fun$COG.category` <- as.character(data_fun_COG$`data_fun$COG.category`)
  data_fun_COG$`data_fun$COG.category`[1] <- "Others"
  colnames(data_fun_COG)[colnames(data_fun_COG)=="data_fun$COG.category"] <- "Name"
  
  #Draw stacked column bar
  data_fun_COG_gg <- melt(data = data_fun_COG,
                         id.vars = c("Name"), variable.name = "Sample", value.name = "Intensity")
  
  ggplotly(ggplot(data_fun_COG_gg, aes(x = Sample, y = Intensity, fill = Name)) +
             geom_bar(stat='identity') + theme_bw() +
             ylab("Intensity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
  )


  
# NOG summary ---------------------------------------
  intensity_columns_N <- cbind(data_fun$NOG.category, intensity_columns)
  data_fun_NOG <- aggregate(. ~ data_fun$NOG.category, data = intensity_columns_N[,-1], FUN = sum)
  
  data_fun_NOG$`data_fun$NOG.category` <- as.character(data_fun_NOG$`data_fun$NOG.category`)
  data_fun_NOG$`data_fun$NOG.category`[1] <- "Others"
  colnames(data_fun_NOG)[colnames(data_fun_NOG)=="data_fun$NOG.category"] <- "Name"
  
  #Draw stacked column bar
  data_fun_NOG_gg <- melt(data = data_fun_NOG,
                           id.vars = c("Name"), variable.name = "Sample", value.name = "Intensity")
  
  ggplotly(ggplot(data_fun_NOG_gg, aes(x = Sample, y = Intensity, fill = Name)) +
             geom_bar(stat='identity') + theme_bw() +
             ylab("Intensity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
  )
  
  ggplotly(ggplot(data_fun_NOG_gg, aes(x = Sample, y = Intensity, fill = Name)) +
             geom_bar(stat='identity') + theme_bw() +
             ylab("Intensity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
  )

  # KEGG summary ---------------------------------------
  intensity_columns_K <- cbind(data_fun$KEGG.name, intensity_columns)
  data_fun_KEGG <- aggregate(. ~ data_fun$KEGG.name, data = intensity_columns_K[,-1], FUN = sum)
  
  data_fun_KEGG$`data_fun$KEGG.name` <- as.character(data_fun_KEGG$`data_fun$KEGG.name`)
  data_fun_KEGG$`data_fun$KEGG.name`[1] <- "Others"
  colnames(data_fun_KEGG)[colnames(data_fun_KEGG)=="data_fun$KEGG.name"] <- "Name"
  
  #Draw stacked column bar
  data_fun_KEGG_gg <- melt(data = data_fun_KEGG,
                          id.vars = c("Name"), variable.name = "Sample", value.name = "Intensity")
  
  ggplotly(ggplot(data_fun_KEGG_gg, aes(x = Sample, y = Intensity, fill = Name)) +
             geom_bar(stat='identity') + theme_bw() +
             ylab("Intensity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
  )


# General pie chart
  Intensity <- rowSums(data_fun_COG[,-1])
  rowSum_COG <- as.data.frame(Intensity)
  COG_cat <- data_fun_COG[,1]
  Percentage <- paste(round(prop.table(rowSum_COG$Intensity)*100,2), "%", sep = "")
  rowSum_COG <- cbind(COG_cat, rowSum_COG, Percentage)
  

  plot_ly(rowSum_COG, labels = ~COG_cat, values = ~Intensity, type = 'pie') %>%
    layout(title = 'Composition of COG categories',
           xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
           yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))

  
  # Calculate subtotal for each category
  intensity_columns_N <- cbind(data_fun$NOG.category, intensity_columns)
  data_fun_NOG <- aggregate(. ~ data_fun$NOG.category, data = intensity_columns_N[,-1], FUN = sum)
  
  # Prepare data for plotting
  IntensityN <- rowSums(data_fun_NOG[,-1])
  rowSum_NOG <- as.data.frame(IntensityN)
  NOG_cat <- data_fun_NOG[,1]
  PercentageN <- paste(round(prop.table(rowSum_NOG$IntensityN)*100,2), "%", sep = "")
  rowSum_NOG <- cbind(NOG_cat, rowSum_NOG, PercentageN)
  
  #Draw pie chart
  plot_ly(rowSum_NOG, labels = ~NOG_cat, values = ~IntensityN, type = 'pie') %>%
    layout(title = 'Composition of NOG categories',
           xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
           yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
  
  
  # Calculate subtotal for each category
  intensity_columns_K <- cbind(data_fun$KEGG.name, intensity_columns)
  data_fun_KEGG <- aggregate(. ~ data_fun$KEGG.name, data = intensity_columns_K[,-1], FUN = sum)
  data_fun_KEGG$`data_fun$KEGG.name` <- as.character(data_fun_KEGG$`data_fun$KEGG.name`)
  data_fun_KEGG$`data_fun$KEGG.name`[1] <- "Unmatched"
  
  
  # Prepare data for plotting
  IntensityK <- rowSums(data_fun_KEGG[,-1])
  rowSum_KEGG <- as.data.frame(IntensityK)
  KEGG_cat <- data_fun_KEGG[,1]
  rowSum_KEGG <- cbind(KEGG_cat, rowSum_KEGG)
  
  #Draw pie chart
  plot_ly(rowSum_KEGG, labels = ~KEGG_cat, values = ~IntensityK, type = 'pie') %>%
    layout(title = 'Composition of KEGG pathways',
           xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
           yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
  