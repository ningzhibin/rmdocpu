"0",""
"0","# proteinGroups <- proteinGroups.txt"
"0",""
"0","tidy_proteingroups <- function(proteinGroups){ "
"0",""
"0","  # extract the primary protein ID,"
"0","  protein.ids_split <- strsplit(as.vector(proteinGroups$""Protein IDs""), "";"") # this is a list of list of split names"
"0","  protein_primary_ids <- unlist(lapply(protein.ids_split, function(x) x[1])) # only keep the first one"
"0","  #rownames(proteinGroups) <- protein_primary_ids # rename the rownames of the matrix"
"0","  "
"0","  # do the row wise filtering"
"0","  index_contaminant <- grep(""\\+"", proteinGroups$`Potential contaminant`) # note that + is a special character"
"0","  index_reverse <- grep(""\\+"", proteinGroups$Reverse)"
"0","  index_to_remove <- c(index_contaminant,index_reverse)"
"0","  "
"0","  proteinGroups <- proteinGroups[-index_to_remove,] # filtered table"
"0","  protein_primary_ids <- protein_primary_ids[-index_to_remove] # filtered ids"
"0",""
"0","  n_contaminant <- length(index_contaminant)"
"0","  n_reversed <- length(index_reverse)"
"0",""
"0","  "
"0","  # extra the intensity column matrix"
"0","  if(any(grepl(""LFQ intensity "", colnames(proteinGroups)))){ # if there are LFQ intensity columns, take out the LFQ columns"
"0","    intensity_columns <- proteinGroups[,grep(""LFQ intensity "", colnames(proteinGroups))]"
"0","    colnames(intensity_columns)<-gsub(""LFQ intensity "", """", colnames(intensity_columns))"
"0","  }else if(any(grepl(""Intensity "", colnames(proteinGroups)))) { # otherwise take out intensity column"
"0","    intensity_columns <-   proteinGroups[,grep(""Intensity "", colnames(proteinGroups))]"
"0","    colnames(intensity_columns)<-gsub(""Intensity "", """", colnames(intensity_columns))"
"0","  }else{ # this is for the special case that no experiment desgin setup, only one column of intensity"
"0","    intensity_columns <-   proteinGroups[,grep(""Intensity"", colnames(proteinGroups)),drop =  FALSE]"
"0","  } "
"0","  "
"0","  return(list(""intensity_matrix"" = intensity_columns,"
"0","              ""n_contaminant"" = n_contaminant,"
"0","              ""n_reversed"" = n_reversed,"
"0","              ""n_unique_peptides"" = proteinGroups$""Unique peptides"","
"0","              ""score"" = proteinGroups$Score,"
"0","              ""protein_primary_ids"" =protein_primary_ids"
"0","              "
"0","              ))"
"0","  "
"0","}"
"0",""
"0",""
"0",""
