---
title: "Maxquant Summary.txt Summary"
author: "ningzhibinn@gmail.com"
date: "`r Sys.time()`"
output:
  html_document:
    fig_width: 10
    fig_caption: TRUE
    toc: true
    toc_depth: 4
    toc_float:
      collapsed: TRUE
      smooth_scroll: TRUE
    number_sections: true
params:  
  summary_file_tbl: !r mtcars ### note that the value is the real value, here supposed to be a read in data.table for one click function.  
---

<style type="text/css">
.main-container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
}
</style>


```{r setup, include=FALSE}
# enviroment setup
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE, cache = TRUE)

library(tidyverse)
library(ggplot2)
#library(plotly)
#library(DT) # for interactive data table display 

# local usage
# rmarkdown::render("MQ_report_summary_ocpu.Rmd", params = list(summary_file_tbl =  your_readin_tbl))
# on local machine, your_readin_tbl is a data table, while on ocpu, your_readin_tbl is a json formatted table


```



```{r function_needed, recho=FALSE}

tidy_MQ_summary <- function(df_summary.txt){
  
  # df_summary.txt has to be a tidyverse tbl format, from read_tsv
  # take out the last line to organize into a data.frame
  
  last_line <- t(df_summary.txt[nrow(df_summary.txt),])
  last_line[last_line[,1] == ""] <- NA
  last_line[last_line[,1] == "0"] <- NA
  last_line <- last_line[-1,, drop = FALSE]
  last_line <- last_line[which(!is.na(last_line[,1])),, drop =  FALSE]
  colnames(last_line) <- ("values")
  
  summary <- df_summary.txt[-nrow(df_summary.txt),] # remove the last line
  
  # take out rows about raw files summary 
  df_rawfiles <-summary[!is.na(summary$Experiment),]
  
  # take out rows about experiment summary
  df_experiment <- summary[is.na(summary$Experiment),]

  
  return(list("summary_all" = last_line,
              "summary_rawfiles" = df_rawfiles,
              "summary_experiment" = df_experiment
              
  ))
  
}

```



```{r file_summary, echo=FALSE,fig.width= 15,fig.height=10}



# start from the data table for parametrized version
summary_file_summary <- tidy_MQ_summary(params$summary_file_tbl)

# This line is only for debugging
#summary_file  <- read_tsv("22122017_Colon_Aging_summary.txt", col_names = TRUE)
#summary_file_summary <- tidy_MQ_summary(summary_file)




```


# Identification by Experiment

```{r id_by_experiment, echo=FALSE,fig.width= 8,fig.height=8}

exp <- summary_file_summary$summary_experiment
p <-ggplot(data=exp, aes(x=`Raw file`, y=`Peptide Sequences Identified`)) +
  geom_bar(stat="identity") + coord_flip()

plotly::ggplotly(p)

```




# Overal performance

check the averaged performance from all raw files:

```{r echo=FALSE}
nrows <- nrow(summary_file_summary$summary_all)
DT::datatable(summary_file_summary$summary_all,options = list(pageLength = nrows))

```

























